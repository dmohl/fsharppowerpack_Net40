{
(*
	Repro of FSharp Bugs 1885, "FSLex doesn't ignore strings in comments"
*)

open System

(*
Testcase "                                                                      <--------------------------
*)

(*
Testcase "asdfasdfasdf"                                                         <--------------------------
*)

// Opens methods related to fslex.exe
open Lexing

// All of our token types are now generated by fsYacc
open Parser


let inc_lnum bol pos = 
  let lnum = pos.pos_lnum in 
  {pos with pos_lnum =  lnum+1; pos_bol = bol }

let newline lexbuf = 
  lexbuf_set_curr_p lexbuf 
    ( inc_lnum (lexeme_end lexbuf) (lexeme_end_p lexbuf))

// Convert a string such as "\"c:\\windows\\\"" into "c:\windows\"             <--------------------------
// "another testcase"                                                          <--------------------------
// "and another                                                                <--------------------------
let normalizeString (str : string) =
    let str = str.Replace("\\\"", "\"")
    let str = str.Replace("\\\\", "\\")
    if str.[0] = '\"' && str.[str.Length - 1] = '\"' then
        str.Substring(1, str.Length - 2)
    else
        str

}

// Regular expressions
let whitespace = [' ' '\t' ]
let newline = ('\n' | '\r' '\n')
let str = '\"' [^ '\"']* '\"'

rule tokenstream = parse
// --------------------------
| "{"		{ LCURLY }
| "}"		{ RCURLY }
| "=" 		{ EQUALS }
// --------------------------
|  str		{ STR(lexeme lexbuf) }
// --------------------------
| whitespace	{ tokenstream lexbuf }
| newline	{ newline lexbuf; tokenstream lexbuf }
// --------------------------
| _    		{ STR("ParseError" + (lexeme lexbuf)) }
| eof   	{ EOF }